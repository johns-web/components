@use '@material/data-table/data-table' as mdc-data-table;
@use '../../material/core/style/vendor-prefixes';
@use '../mdc-helpers/mdc-helpers';
@use '../../material/table/table-flex-styles';

@include mdc-data-table.core-styles($query: mdc-helpers.$mat-base-styles-without-animation-query);
@include table-flex-styles.private-table-flex-styles();

.mat-mdc-table-sticky {
  // Note that the table can either set this class or an inline style to make something sticky.
  // We set the style as `!important` so that we get an identical specificity in both cases
  // and to avoid cases where user styles have a higher specificity.
  @include vendor-prefixes.position-sticky($important: true);
}

// MDC Table applies `table-layout: fixed`, but this is a backwards incompatible
// change since the table did not previously apply it.
// TODO: Add a mixin to MDC to set the layout instead of including this override,
// see this issue: https://github.com/material-components/material-components-web/issues/6412
.mat-mdc-table {
  table-layout: auto;
}

// MDC table rows are styled with a top border, whereas our legacy flex table styles rows with
// a bottom border. Remove the bottom border style from the rows and let MDC display its top
// border.
mat-row.mat-mdc-row, mat-header-row.mat-mdc-header-row, mat-footer-row.mat-mdc-footer-row {
  border-bottom: none;
}

// Cells need to inherit their background in order to overlap each other when sticky.
// The background needs to be inherited from the table, tbody/tfoot, row
// (already set in MDC), and cell.
.mat-mdc-table tbody, .mat-mdc-table tfoot,
.mat-mdc-cell, .mat-mdc-footer-cell {
  background: inherit;
}

// Disable hover styling while MDC uses an opacity for its color.
// When the hover style is used with sticky cells, the opacity shows the cells overlapping.
.mat-mdc-table .mat-mdc-row:hover,
.mat-mdc-table .mat-mdc-footer-row:hover {
  background-color: inherit;
}
